.PLRBT15       17.6.82       CHANGE IN PASSWORD,REMOVED UNUSED VARIABLES
.SVARS01       10.6.81       ADDR MOVED TO NON-INIT'd STORAGE
.SVARS00        8.6.81       DOS FLAG ADDED FOR SLAVE ROM
.VARS00         3.6.81       RENAMED
.VARS19        23.4.81       RS232FLG ADDED


.VARIABLES
.USER REGISTERS ON STACK RELATIVE TO U.


         ORG   0             RELATIVE TO U-REGISTER


UCC      RMB   1             USER COND CODE
UD                          .D=A+B=RMB2
UA       RMB   1             USERS A
UB       RMB   1             USERS B
UDP      RMB   1             USERS DP REG
UX       RMB   2             USERS X
UY       RMB   2             USERS Y
UU       RMB   2             USERS U
UPC      RMB   2             USERS PC



.TELETEXT SCREEN VARIABLES.STORED FOR EACH TTXT SCREEN
         ORG   0             RELATIVE TO Y REGISTER (ORDER IS IMPORTANT)
BEGBASE  RMB   2             START OF PHYSICAL SCREEN IN MEMORY
ENDBASE  RMB   2             END OF PHYSICAL SCREEN IN MEMORY
BEGINS   RMB   2             ADDRESS OF START OF FIRST AVAILABLE LINE ON SCREEN
ENDS     RMB   2             ADDRESS OF END OF LAST AVAILABLE LINE ON SCREEN
BOTTOM   RMB   1             BOTTOM LINE OF CURRENT SCREEN(0-23)

NUMTZER                      .VARIABLES BELOW TO NUMTVARS IS INITIALISE TO 0 ON LOGON

TOP      RMB   1             TOP LINE OF CURRENT SCREEN(0-22)
TTXTF    RMB   1             IF SET INDICATES CONTROL CHARS ARE TELETEXT NOT ASCII
INVF     RMB   1             INVERSE VIDEO FLAG
CURSOR                      .CURSOR = VERT AND HOR
VERT     RMB   1             VERTICAL POSITION OF CURSOR ON SCREEN
HORZ     RMB   1             HORIZONTAL POSITION OF CURSOR ON SCREEN
SPLIT    RMB   1             FIRST LINE OF LOWER PART OF SPLIT SCREEN 


NUMTVARS                    .NUMBER OF BYTES OF TELETEXT VARS


.PROTECTED VARIABLES ( VARS REQUIRING INITIALISATION FIRST )

         ORG   VARS1          PLACE AT END OF SCREEN 1

.DIRECT PAGE ADDRESSED

CURSVARS RMB   2             POINTER TO BASE OF CURRENT SCREEN VARS -TTXT1 OR TTXT2

.Vars to be initialised to non zero first
FLAGS


CLOCKFLG RMB   1             CLOCK RUN/STOP STATUS.
LOGONFLG RMB   1             SET WHILE IN LOGON SCREEN
RCVFLG   RMB   1             COMMS: SET WHEN POLL/ACK RECVD
COMTIM   RMB   1             COMMS: TIMEOUT COUNTER


.All flags 1 byte & 2 bytes vars up to ENDZERO cleared to zero


USERFLG  RMB   1             "CURRENT" USER/SYSTEM STATUS OF POLYWOG
KEYINTFG RMB   1             KEYBOARD INTERRUPT FLAG
GKINTFLG RMB   1
BKPTFLG  RMB   1
RS232FLG EQU   *             SET ON A RS232 INTERRUPT
PCORPFLG RMB   1
HELPFLG  RMB   1
CALCFLG  RMB   1
CHRINFLG RMB   1
PSEFLG   RMB   1             SET IF PAUSE KEY PRESSED
SECFLG   RMB   1           
BUFSTAT  RMB   1             KEYBOARD BUFFER STATUS FLAG
EXITFLG  RMB   1             EXIT FLAG SET IN KEYBD IRQ ROUTINE
TIMIFLG  RMB   1             USER's TIMER INTERRUPT FLAG ( = TIMER NUMBER )
WRAPFLG  RMB   1             WRAP AROUND MODE FLAG
MSGFLG   RMB   1             COMMS: SET WHEN MSG RECVD OR ERROR
TERMFLG  RMB   1             TERMINAL MODE FLAG
CTRLFLG  RMB   1             TERMINAL CTRL MODE FLAG
CHRCOUNT RMB   2             TERMINAL MODE CHAR COUNTER





.TWO BYTE VARIABLES

IBUFCUR                     .INPUT BUFFER START POSITION OF CURSOR ON SCREEN
IBUFSV   RMB   1             VERTICAL POSITION
IBUFSH   RMB   1             HORIZONTAL POSITION
ENDL_CUR                    .END OF LINE BUFFER
ENDL_VERT RMB  1
ENDL_HORZ RMB  1
MAXBUFFLEN RMB 2             MAXIMUM BUFFER LENGTH
LINEBUFF RMB   2             ADDRESS WHERE LINE IS COPY TO WHEN CR IS PRESSED
CURBUFFLEN RMB 2             CURRENT BUFFER LENGTH
TIME     RMB   1             ELAPSED TIME IN INCREMENTS OF 100 x 10 Milliseconds.
TIMELS   RMB   2   

BUFEND   RMB   2             COMMS: RECV BUF END ADR (0 WHEN NO BUF)
DOSFLG   RMB   1             ADDED FOR OLD COMM.*+*+*+*+*++***

.
ENDZERO
.
. TO BE INITIALISED ON RESET ONLY, NOT LOGOFF !

PORTFLG  RMB   1             SET IF A RS232 PORT IS ATTACHED
ADDR     RMB   1             COMMS: POLY POLL/SELECT ADDRESS
IDENT    RMB   1             COMMS: UNIQUE POLY IDENTITY
EXTEND   RMB   1             COMMS: =$80 WHEN IN EXTEND MODE ELSE 0
NS       RMB   1             COMMS: 0000SSS0: SSS= SEND MSG NO
NR       RMB   1             COMMS: RRR00000: RRR= NO OF MSG EXPECTED

LOADEDFG RMB   1
INTFLG   RMB   1             INTERRUPT FLAG

.NON INITIALISED STORAGE - DIRECT MODE ADDRESSING



. ONE BYTE VARS

BUFCHAR  RMB   1
CNTRL    RMB   1             COMMS: RECVD CONTROL BYTE
TYPE     RMB   1             COMMS: RECVD TYPE BYTE (1ST INFO)
RCVADR   RMB   1             RECVD MSG ADDR: 0=BROADCAST
ENDLOD   RMB   1             *+*+*+*+**++*+*+*+*+*
LODFLAG  RMB   1             *+*+*+*+*+*+*+*+*+*+
BYTECNT  RMB   1             *+*+*+*+*+*+*++***+*+


. TWO BYTE VARS

AUTOREPT RMB   2             AUTO REPEAT COUNTER

BUFP     RMB   2             COMMS: CURR PTR TO RECV BUF
BUFST    RMB   2             COMMS: RECV BUF START ADR
SPPTR    RMB   2             COMMS: PTR TO PARAMS FOR MSG SEND




.WATCH FOR OVERFLOW OF AVAILABLE MEMORY SCREEN 1 RAM
         ERRIF *>SCREEN1+1024




         ORG   VARS2         VARIABLES AT SCREEN 2 RAM
TTXT1    RMB   NUMTVARS      TELETEXT SCREEN 1 VARIABLES
TTXT2    RMB   NUMTVARS      TELETEXT SCREEN 2 VARIABLES



.NON INITIALISED - EXTENDED MODE ADDRESSING


JRD      RMB   2             COMMS: JUMP ADR FOR RECV INTERRUPT
LOADJ    RMB   2             *++*+*+*+*+*+*+*+*+*
LOADADR  RMB   2             *+*+*+*+*+*+*+*+*+*+
SQPTR    RMB   2             TERMINAL: PTR TO START OF QUEUE
EQPTR    RMB   2             TERMINAL: PTR TO END OF QUEUE
EDITFLG   RMB  1
PASSWORD RMB   NAMELGTH

.WATCH FOR OVERFLOW OF AVAILABLE MEMORY SCREEN 2 RAM
         ERRIF *>SCREEN2+1024




