WRITE_BYTE
         LDX   FCBCADR       POINT TO CURRENT FCB
         LDB   SPCOMFLG,X    SPACE COMPRESSION ON ASCII FILE?
         BMI   PUT_BYTE      NO - PUT BYTE INTO BUFFER
         CMPA  #' '          YES - SPACE TO BE WRITTEN?
         BNE   CHECK_SPACE   NO - BRANCH
         INCB               .YES - INCREMENT TAB COUNT
         STB   SPCOMFLG,X          AND STORE AWAY AGAIN
         CMPB  #127          127 SPACES YET?
         BNE   FMSEXOKB      NO - RETURN
         BRA   WRITE_SPACES  YES - WRITE TO BUFFER

PUT_SPACE
         BSR   WRITE_SPACES  WRITE SPACE COMPRESSION CODES TO DISK
         BCC   WRITE_BYTE    WRITE NEXT BYTE TO DISK
         RTS                  .EXIT

CHECK_SPACE
         TSTB               .ANY SPACES TO BE WRITTEN TO THE BUFFER?
         BEQ   PUT_BYTE      NO - GO AND PUT CHARACTER IN BUFFER
         BRA   PUT_SPACE     YES -

FMSEXOKB CLC                .SUCCESS EXIT
         RTS                  .EXIT

WRITE_SPACES
         PSHS  A             SAVE CHARACTER
         CMPB  #$01          SINGLE SPACE?
         BNE   PUT_SP_COMPRESSION NO - MULTIPLE
         LDA   #' '               YES - STORE ONE SPACE CHARACTER
         BRA   FMSLPBC

PUT_SP_COMPRESSION
         LDA   #$09          STORE SPACE COMPRESSION CHARACTER
         BSR   PUT_BYTE
         PULS  A             PULL IN CASE OF ERROR
         BCS   FMSEXITB      ERROR EXIT
         PSHS  A             SAVE A AGAIN
         LDX   FCBCADR       POINT TO CURRENT FCB
         LDA   SPCOMFLG,X    GET NUMBER OF SPACES (I.E. TAB COUNT)
FMSLPBC  CLR   SPCOMFLG,X    CLEAR TO ZERO
         BSR   PUT_BYTE      PUT TAB COUNT TO BUFFER
         PULS  A             RESTORE BYTE
         RTS                  .EXIT

.STORE BYTE IN FCB BUF AND WRITE SECTOR IF FULL

PUT_BYTE LDX   FCBCADR       POINT TO CURRENT FCB
         LDB   ACTSTAT,X     GET ACTIVITY STATUS
         CMPB  #$02          TEST FOR OPEN FOR WRITE
         LBNE  ERR18         BRANCH IF NOT
         LDB   DATINDEX,X    GET DATA INDEX BYTE
         CMPB  #$04          CHECK IF FIRST BYTE
         BNE   FMSLPBB       YES NO NEED TO WRITE BUFFER
         PSHS  A
         BSR   FILE_START_SECTOR
         PULS  A
         BCS   FMSEXITB      ERROR EXIT
FMSLPBB  JSR   FILL_FCB      PLACE BYTE IN BUFFER - SET CARRY IF FULL
         BCC   FMSEXITB      SUCCESSFULLY PLACED IN BUFFER
.
.BUFFER NOW FULL - SET DATA INDEX TO POINT TO START OF BUFFER
.DATA AREA (BYTE 4 OF FCB DATA)
.
         LDB   #$04          SET DATA INDEX BYTE
         LDX   FCBCADR       POINT TO CURRENT FCB
         STB   DATINDEX,X    POINT TO FIRST DATA BYTE
         CLC
FMSEXITB RTS                 RETURN

FILE_START_SECTOR
         LDA   #23           FN 23 IS FILE_START_SECTOR IN POPSMXX
         STA   FNCODE,X
         JSR   FMS320
         RTS
